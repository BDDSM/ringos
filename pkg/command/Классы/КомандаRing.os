#Использовать 1commands
#Использовать "../../../internal/utils"
#Использовать "../../../internal/localization"

#Область ОписаниеПеременных

Перем Лог; // Объект для логирования событий
Перем ЛокализованныеСтроки; // Локализованные строки

Перем МодульRing;
Перем Команда;
Перем Параметры;
Перем ПараметрыВыполнения;

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура УстановитьПараметрыВыполнения(ПараметрыВыполненияRing) Экспорт
	ПараметрыВыполнения = ПараметрыВыполненияRing;
КонецПроцедуры

Процедура УстановитьМодульRing(ПараметрМодульRing) Экспорт
	
	Если ТипЗнч(ПараметрМодульRing) = Тип("МодульRing") Тогда
		МодульRing = ПараметрМодульRing;
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьПараметр(Параметр) Экспорт
	Параметры.Добавить(Параметр);
КонецПроцедуры

Процедура ДобавитьЭкранированныйПараметр(Параметр) Экспорт
	Параметры.Добавить(ЭкранироватьСтроку(Параметр));
КонецПроцедуры

Функция Исполнить(ПерехватыватьВывод = Истина) Экспорт
	
	Если ЗначениеЗаполнено(МодульRing) Тогда
		
		УстановитьОбщиеПараметры();
		
		Команда.ДобавитьПараметр(МодульRing.Идентификатор());
		
		Команда.ДобавитьПараметры(Параметры);
		
	Иначе
		
		Команда.ДобавитьПараметры(Параметры);
		
		УстановитьОбщиеПараметры();
		
	КонецЕсли;

	ПеременныеСреды = Новый Соответствие;
	ПеременныеСреды.Вставить("RING_OPTS", ОпцииRing());
	Команда.УстановитьПеременныеСреды(ПеременныеСреды);
	
	Команда.ПерехватыватьПотоки(ПерехватыватьВывод);
	
	Возврат Команда.Исполнить();
	
КонецФункции

Функция ПолучитьВывод() Экспорт
	Возврат Команда.ПолучитьВывод();
КонецФункции

Процедура УстановитьДиапазонПравильныхКодовВозврата(Знач МинимальныйОжидаемыйКодВозврата,
		Знач МаксимальныйОжидаемыйКодВозврата) Экспорт
	
	Команда.УстановитьДиапазонПравильныхКодовВозврата(МинимальныйОжидаемыйКодВозврата,
		МаксимальныйОжидаемыйКодВозврата);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта()

	Лог = ПараметрыПриложения.Лог("command");
	ЛокализованныеСтроки = ПараметрыПриложения.ЛокализованныеСтроки(Локализация_КомандаRing);
	
	ПараметрыВыполнения = Неопределено;
	Параметры = Новый Массив;
	
	Команда = Новый Команда();
	Команда.УстановитьКодировкуВывода("UTF-8");
	Команда.УстановитьКоманду("ring");
	Команда.УстановитьПравильныйКодВозврата(0);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОбщиеПараметры()
	
	Если ПараметрыВыполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УровеньДетализацииСообщений = ПараметрыВыполнения.УровеньДетализацииСообщений();
	Если ЗначениеЗаполнено(УровеньДетализацииСообщений) Тогда
		
		Команда.ДобавитьПараметр(СтрШаблон("-l %1", УровеньДетализацииСообщений));
		
		Лог.Отладка(ЛокализованныеСтроки.ОтладкаУровеньДетализацииСообщений, УровеньДетализацииСообщений);
		
	КонецЕсли;
	
	Если ПараметрыВыполнения.ВыводОтладочнойИнформации() Тогда
		
		Команда.ДобавитьПараметр("-x");
		
		Лог.Отладка(ЛокализованныеСтроки.ОтладкаВыводОтладочнойИнформации);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ОпцииRing()
	
	ОпцииRing = Новый Массив;
	ОпцииRing.Добавить("-Dfile.encoding=UTF-8");
	
	Если ТипЗнч(ПараметрыВыполнения) = Тип("ПараметрыКомандыRing") Тогда
		
		ЯзыкВывода = ПараметрыВыполнения.ЯзыкВывода();
		
		Если ЗначениеЗаполнено(ЯзыкВывода) Тогда
			
			ОпцииRing.Добавить(СтрШаблон("-Duser.country=%1", ЯзыкВывода));
			ОпцииRing.Добавить(СтрШаблон("-Duser.language=%1", ВРег(ЯзыкВывода)));
			
			Лог.Отладка(ЛокализованныеСтроки.ОтладкаЯзыкВывода, ЯзыкВывода);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтрСоединить(ОпцииRing, " ");
	
КонецФункции

Функция ЭкранироватьСтроку(Строка)
	Возврат СтрШаблон("""%1""", Строка);
КонецФункции

#КонецОбласти