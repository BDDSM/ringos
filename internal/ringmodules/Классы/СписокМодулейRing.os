#Область ОписаниеПеременных

Перем СписокМодулей;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Возвращает количество модулей в коллекции
//
//  Возвращаемое значение:
//   Число - количество модулей
//
Функция Количество() Экспорт
	Возврат СписокМодулей.Количество();
КонецФункции

// Ищет модули в списке по полному идентификатору, по имени модуля, по имени и версии модуля (в формате Имя@Версия),
//	а также по имени и архитектуре модуля (в формате Имя:Архитектура)
//
// Параметры:
//   ИдентификаторМодуля - Строка - Идетификатор модуля (модулей), кторый надо найти
//
//  Возвращаемое значение:
//   Массив Из МодульRing - Найденные модули
//
Функция НайтиМодули(ИдентификаторМодуля) Экспорт
	
	Модуль = СписокМодулей.Получить(ИдентификаторМодуля);
	Если ЗначениеЗаполнено(Модуль) Тогда
		
		НайденныеМодули = Новый Массив;
		НайденныеМодули.Добавить(Модуль);
		
		Возврат НайденныеМодули;
		
	КонецЕсли;
	
	ПоискПоИмениМодуля = Новый РегулярноеВыражение("^(\w+)$");
	СовпаденияПоИмениМодуля = ПоискПоИмениМодуля.НайтиСовпадения(ИдентификаторМодуля);
	Если СовпаденияПоИмениМодуля.Количество() > 0 Тогда
		
		ИмяМодуля = СовпаденияПоИмениМодуля[0].Группы[1].Значение;
		
		Возврат НайтиМодулиПоИмени(ИмяМодуля);
		
	КонецЕсли;
	
	ПоискПоВерсииМодуля = Новый РегулярноеВыражение("^(\w+)@(\d+.\d+.\d+)$");
	СовпаденияПоВерсииМодуля = ПоискПоВерсииМодуля.НайтиСовпадения(ИдентификаторМодуля);
	Если СовпаденияПоВерсииМодуля.Количество() > 0 Тогда
		
		ИмяМодуля = СовпаденияПоВерсииМодуля[0].Группы[1].Значение;
		ВерсияМодуля = СовпаденияПоВерсииМодуля[0].Группы[2].Значение;
		
		Возврат НайтиМодулиПоВерсииМодуля(ИмяМодуля, ВерсияМодуля);
		
	КонецЕсли;
	
	ПоискПоАрхитектуре = Новый РегулярноеВыражение("^(\w+):(\w+)$");
	СовпаденияПоАрхитектуре = ПоискПоАрхитектуре.НайтиСовпадения(ИдентификаторМодуля);
	Если СовпаденияПоАрхитектуре.Количество() > 0 Тогда
		
		ИмяМодуля = СовпаденияПоАрхитектуре[0].Группы[1].Значение;
		АрхитектураМодуля = СовпаденияПоАрхитектуре[0].Группы[2].Значение;
		
		Возврат НайтиМодулиПоАрхитектуре(ИмяМодуля, АрхитектураМодуля);
		
	КонецЕсли;
	
	Возврат Новый Массив;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриСозданииОбъекта(СписокМодулейСтрокой)
	
	СписокМодулей = Новый Соответствие;
	
	РегулярноеВыражение = Новый РегулярноеВыражение("^\s*(\w*)@(\d*.\d*.\d*):(\w*)\s-\s(.*)\s*$");
	Совпадения = РегулярноеВыражение.НайтиСовпадения(СписокМодулейСтрокой);
	Для Каждого Совпадение Из Совпадения Цикл
		
		ИмяМодуля = Совпадение.Группы[1].Значение;
		ВерсияМодуля = Совпадение.Группы[2].Значение;
		АрхитектураМодуля = Совпадение.Группы[3].Значение;
		ОписаниеМодуля = Совпадение.Группы[4].Значение;
		
		Модуль = Новый МодульRing(ИмяМодуля, ВерсияМодуля, АрхитектураМодуля, ОписаниеМодуля);
		ИдентификаторМодуля = Модуль.Идентификатор();
		СписокМодулей.Вставить(ИдентификаторМодуля, Модуль);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиМодулиПоИмени(ИмяМодуля)
	
	НайденныеМодули = Новый Массив;
	
	Для каждого КлючИЗначение Из СписокМодулей Цикл
		
		Модуль = КлючИЗначение.Значение;
		Если ИмяМодуля = Модуль.Имя() Тогда
			НайденныеМодули.Добавить(Модуль);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НайденныеМодули;
	
КонецФункции

Функция НайтиМодулиПоВерсииМодуля(ИмяМодуля, ВерсияМодуля)
	
	НайденныеМодули = Новый Массив;
	
	Для каждого КлючИЗначение Из СписокМодулей Цикл
		
		Модуль = КлючИЗначение.Значение;
		Если ИмяМодуля = Модуль.Имя() И ВерсияМодуля = Модуль.Версия() Тогда
			НайденныеМодули.Добавить(Модуль);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НайденныеМодули;
	
КонецФункции

Функция НайтиМодулиПоАрхитектуре(ИмяМодуля, АрхитектураМодуля)
	
	НайденныеМодули = Новый Массив;
	
	Для каждого КлючИЗначение Из СписокМодулей Цикл
		
		Модуль = КлючИЗначение.Значение;
		Если ИмяМодуля = Модуль.Имя() И АрхитектураМодуля = Модуль.Архитектура() Тогда
			НайденныеМодули.Добавить(Модуль);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат НайденныеМодули;
	
КонецФункции

#КонецОбласти